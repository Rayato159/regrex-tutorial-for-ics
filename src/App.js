import { useState, useEffect } from "react"

// Icons
import { AiOutlineCheck, AiOutlineClose } from "react-icons/ai"

// Components
import { ParagraphTitle } from "./components/ParagraphTitle"
import { CodeBlocks } from "./components/CodeBlock"


export const App = () => {
  const [firstQuestion, setFirstQuestion] = useState("")
  const [secondQuestion, setSecondQuestion] = useState("")
  const [thirdQuestion, setThirdQuestion] = useState("")

  const [checked, setChecked] = useState(false)

  const [firstQuestionCheck, setFirstQuestionCheck] = useState(false)
  const [secondQuestionCheck, setSecondQuestionCheck] = useState(false)
  const [thirdQuestionCheck, setThirdQuestionCheck] = useState(false)

  const [point, setPoint] = useState(0)

  const tableOfContents = [
    "A Brief History of Regular Expression",
    "Regular Expression In Nutshell",
    "Patterns of Regular Expression",
    "Quiz",
  ]

  const tableOfContentIds = [
    "table-of-content",
    "nutshell",
    "patterns",
    "quiz",
  ]

  const onClickHandle = (e) => {
    e.preventDefault()
    firstQuestionCheckHandle(firstQuestion)
    secondQuestionCheckHandle(secondQuestion)
    thirdQuestionCheckHandle(thirdQuestion)
    setChecked(true)
  }

  const firstQuestionCheckHandle = (pattern) => {
    const anwser = "www.ics.com"
    const checker = `<a href="www.ics.com">Click here!</a>`.match(new RegExp(pattern))[0]
    if (anwser === checker) {
      setFirstQuestionCheck(true)
    }
  }

  const secondQuestionCheckHandle = (pattern) => {
    const anwser = "0123456789"
    const checker = `Hello0123456789`.match(new RegExp(pattern))[0]
    if (anwser === checker) {
      setSecondQuestionCheck(true)
    }
  }

  const thirdQuestionCheckHandle = (pattern) => {
    const anwser = "test@gmail.com"
    const checker = `to:test@gmail.com.`.match(new RegExp(pattern))[0]
    if (anwser === checker) {
      setThirdQuestionCheck(true)
    }
  }

  const onResetHandle = (e) => {
    e.preventDefault()
    setFirstQuestionCheck(false)
    setSecondQuestionCheck(false)
    setThirdQuestionCheck(false)
    setPoint(0)
    setChecked(false)
  }

  const addPoint = () => {
    let total = 0
    if (firstQuestionCheck) {
      total++
    }
    if (secondQuestionCheck) {
      total++
    }
    if (thirdQuestionCheck) {
      total++
    }
    setPoint(total)
  }

  useEffect(() => {
    if (checked) {
      addPoint()
    }
  }, [checked])

  const historyRefLinks = [
    "https://medium.com/@minisha.mit/regular-expression-part-1-8d75128f6274",
    "https://en.wikipedia.org/wiki/Warren_Sturgis_McCulloch",
    "https://en.wikipedia.org/wiki/Walter_Pitts",
    "https://en.wikipedia.org/wiki/Stephen_Cole_Kleene",
    "https://en.wikipedia.org/wiki/Ken_Thompson",
  ]

  return (
    <div className="App">
      <div className="mx-auto max-w-5xl p-4">
        {/* Header */}
        <div className="flex flex-col space-y-4 bg-cyan-800 text-white px-6 py-8 rounded-lg">
          <div className="flex flex-col space-y-2">
            <div>
              <div className="text-xl font-semibold md:text-2xl">üìù Regular Expression Tutorial</div>
            </div>
            <div>
              <div className="text-sm md:text-md font-semibold">For iCreativeSystems Co.,Ltd</div>
            </div>
          </div>
        </div>

        {/* Content */}
        <div className="flex flex-col space-y-10 pt-4">
          <div className="flex flex-col space-y-3">
            <div>
                <ParagraphTitle props={'üßë‚Äçüíª Instructor'}/>
            </div>
            <div className="flex flex-col space-y-1 pl-3">
              <div className="font-semibold text-md md:text-md">
                Ruangyot Nanchiang (Lookhin)
              </div>
              <div className="text-sm md:text-sm">
                Backend Developer
              </div>
            </div>
          </div>

          {/* Table of Contents */}
          <div className="flex flex-col space-y-3">
            <div>
              <ParagraphTitle props={'üìë Table of Contents'}/>
            </div>
            <div className="text-md md:text-md pl-3">
              <ul>
                {
                  tableOfContents.map((content, i) => {
                    return (
                      <li className="font-semibold text-gray-500 hover:text-gray-800" key={i}><a href={"#"+tableOfContentIds[i]}>- {content}</a></li>
                    )
                  })
                }
              </ul>
            </div>
          </div>

          {/* Paragraph */}
          <div className="flex flex-col space-y-3">
            <div id="table-of-content">
                <ParagraphTitle props={'üìñ A Brief History of Regular Expression'}/>
            </div>
            <div className="text-md md:text-md pl-3">
              ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤‡∏Ç‡∏≠‡∏á <strong>Regular Expression</strong> ‡∏ô‡∏±‡πâ‡∏ô ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏õ‡∏µ <strong>‡∏Ñ.‡∏®. 1943</strong> ‡πÑ‡∏î‡πâ‡∏°‡∏µ‡∏ô‡∏±‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ó‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ô‡∏≤‡∏°‡∏ß‡πà‡∏≤ <strong>Warren S. McCulloch</strong> ‡πÅ‡∏•‡∏∞ <strong>Walter Pitts</strong>
              ‡∏Ñ‡∏¥‡∏î‡∏Ñ‡πâ‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ó‡∏Ç‡∏≠‡∏á‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå
            </div>
            <div className="flex flex-col space-y-1 text-md md:text-md py-3 pl-3">
              <div>
                <img className="w-80 h-auto rounded-lg" src="https://machinelearningknowledge.ai/wp-content/uploads/2019/11/McCulloch-Pitts-1.jpg" />
                <div className="text-xs mt-2">
                  Warren S. McCulloch ‡πÅ‡∏•‡∏∞ Walter Pitts
                </div>
              </div>
            </div>
            
            <div className="text-md md:text-md pl-3">
              ‡∏ï‡πà‡∏≠‡∏°‡∏≤ ‡πÉ‡∏ô‡∏õ‡∏µ <strong>‡∏Ñ.‡∏®. 1956</strong> ‡πÑ‡∏î‡πâ‡∏°‡∏µ‡∏ô‡∏±‡∏Å‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏ô‡∏≤‡∏°‡∏ß‡πà‡∏≤ <strong>Stephen Kleene</strong> ‡πÑ‡∏î‡πâ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏Ç‡∏≠‡∏á Warren S. McCulloch ‡πÅ‡∏•‡∏∞ Walter Pitts
              ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏û‡∏µ‡∏ä‡∏Ñ‡∏ì‡∏¥‡∏ï <strong>‡πÇ‡∏î‡∏¢‡πÄ‡∏Ç‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏°‡∏±‡∏ô‡∏ß‡πà‡∏≤ "Regular Expression"</strong> ‡∏Å‡∏•‡πà‡∏≤‡∏ß‡πÇ‡∏î‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô
              ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô <strong>Format</strong> ‡∏´‡∏£‡∏∑‡∏≠ <strong>Pattern</strong> ‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
            </div>
            
            <div className="text-md md:text-md pl-3">
              ‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏µ‡∏Å‡∏ô‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡∏°‡∏≤ ‡πÉ‡∏ô‡∏õ‡∏µ <strong>‡∏Ñ.‡∏®. 1968</strong> ‡∏¢‡∏∏‡∏Ñ‡∏ó‡∏µ‡πà Computer Science ‡∏ñ‡∏∑‡∏≠‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô <strong>‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏°‡∏µ Computer Designer ‡∏ó‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á ‡∏ô‡∏≤‡∏°‡∏ß‡πà‡∏≤ Ken Thompson
              ‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î‡∏Ñ‡πâ‡∏ô ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö Text Editor</strong> ‡πÇ‡∏î‡∏¢‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÅ‡∏Ñ‡πà Pattern ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
              ‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏ô‡∏ô‡∏µ‡πâ‡∏ß‡πà‡∏≤ <strong>"Regular Expression"</strong> ‡∏ã‡∏∂‡πà‡∏á‡πÑ‡∏î‡πâ‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡∏à‡∏≤‡∏Å <strong>Stephen Kleene</strong> ‡πÅ‡∏Ñ‡πà‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏≠ ‡πÄ‡∏Ç‡∏≤‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö <strong>Unix</strong>
              ‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô
            </div>

            {/* Image */}
            <div className="flex space-x-4 md:space-x-10 text-md md:text-md py-3 pl-3">
              <div>
                <img className="w-auto h-48 md:h-64 rounded-lg" src="https://upload.wikimedia.org/wikipedia/commons/1/1c/Kleene.jpg" />
                <div className="text-xs mt-2">
                  Stephen Kleene
                </div>
              </div>
              <div>
                <img className="w-auto h-48 md:h-64 rounded-lg" src="https://www.unixmen.com/wp-content/uploads/2015/10/thompson01.jpg" />
                <div className="text-xs mt-2">
                  Ken Thompson
                </div>
              </div>
            </div>
            <div className="text-md md:text-md pl-3">
              Reference:
              <ul>
                {
                  historyRefLinks.map((historyRefLink, i) => {
                    return (
                      <li key={i} className="text-sm text-blue-400 hover:text-blue-600 cursor-pointer">{historyRefLink}</li>
                    )
                  })
                }
              </ul>
            </div>
          </div>

          <div id="nutshell" className="flex flex-col space-y-3">
            <div>
              <ParagraphTitle props={'ü•ú Regular Expression In Nutshell'}/>
            </div>
            <div className="text-md md:text-md pl-3">
              ‡∏™‡∏£‡∏∏‡∏õ‡∏á‡πà‡∏≤‡∏¢‡πÜ‡∏Ñ‡∏∑‡∏≠ <strong>Regular Expression</strong> ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÄ‡∏Æ‡πâ‡∏¢ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà!! ‡∏à‡∏£‡∏¥‡∏á‡πÜ‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏±‡∏ô‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ä‡∏ô‡∏¥‡∏î‡∏´‡∏ô‡∏∂‡πà‡∏á
              ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ <strong>Search</strong> ‡∏´‡∏£‡∏∑‡∏≠ <strong>Repalce</strong> ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏á <strong>String</strong>
              ‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å <strong>Pattern</strong> ‡∏ô‡∏±‡πà‡∏ô‡πÄ‡∏≠‡∏á
            </div>
          </div>

          <div id="patterns" className="flex flex-col space-y-4">
            <div>
              <ParagraphTitle props={'üß© Patterns of Regular Expression'}/>
            </div>
            <div className="text-md md:text-md pl-3">
              ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏ñ‡πâ‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏°‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô‡∏°‡∏±‡∏Å‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏ß‡πà‡∏≤ <strong>Pattern</strong> ‡πÄ‡∏ô‡∏µ‡πà‡∏¢ ‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏•‡πà‡∏∞? ‡∏°‡∏±‡∏ô‡∏Å‡πá‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡πÅ‡∏õ‡∏•‡∏Å‡∏õ‡∏£‡∏∞‡∏´‡∏•‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏ô‡∏∞
              ‡∏°‡∏±‡∏ô‡∏Å‡πá‡∏à‡∏∞‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡∏î‡∏±‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á (‡∏à‡∏∞‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ô‡∏ö‡πà‡∏≠‡∏¢‡πÜ)
            </div>
            
            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Any
              </div>
              <div className="text-sm md:text-sm pl-3">
                ‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡πá‡πÑ‡∏î‡πâ ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà (‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ * ‡∏°‡∏≤‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏ß‡πà‡∏≤ ‡πÉ‡∏´‡πâ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÅ‡∏ö‡∏ö‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ pattern ‡πÉ‡∏´‡∏°‡πà‡∏°‡∏≤‡∏ï‡πà‡∏≠)
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`.`}/>
              </div>
              <div className="pl-3 text-sm">
              <div className=" text-md md:text-md pl-3">
                ‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠ any characters ‡∏¢‡∏≤‡∏ß‡πÜ
              </div>
                <CodeBlocks props={`.*`}/>
              </div>
            </div>
              
            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Word, Number, White space
              </div>
              <div className="text-sm md:text-sm pl-3">
                ‡πÄ‡∏≠‡∏≤ word, number, white space
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`\\w \\d \\s`}/>
              </div>
              <div className="font-semibold text-sm md:text-sm pl-3">
                Example
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`abc 123`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`\\w => abc123`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`\\d => 123`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`\\s => (White Space)`}/>
              </div>
            </div>
            
            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Not Word, Number, White space
              </div>
              <div className="text-sm md:text-sm pl-3">
                ‡πÑ‡∏°‡πà‡πÄ‡∏≠‡∏≤ word, number, white space (‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà‡∏ô‡∏∞ ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°!!!)
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`\\W \\D \\S`}/>
              </div>
              <div className="font-semibold text-sm md:text-sm pl-3">
                Example
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`abc 123`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`\\W => (White Space)`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`\\D => abc `}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`\\S => abc123`}/>
              </div>
            </div>
            
            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Start With, End with
              </div>
              <div className="text-sm md:text-sm pl-3">
                ^ ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡πâ‡∏ß‡∏¢ ‡πÅ‡∏•‡∏∞ $ ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏à‡∏ö‡∏î‡πâ‡∏ß‡∏¢
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`^abc$`}/>
              </div>
              <div className="font-semibold text-sm md:text-sm pl-3">
                Example
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`www.ics.com`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`^www.*com$ => www.ics.com`}/>
              </div>
            </div>
              
            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Accept abc
              </div>
              <div className="text-sm md:text-sm pl-3">
                Accept ‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ï‡∏≤‡∏°‡πÉ‡∏ô‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö ‡πÄ‡∏ä‡πà‡∏ô‡πÉ‡∏ô‡∏ô‡∏µ‡πâ abc ‡∏Å‡πá‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞ abc ***‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏Å‡πá‡πÑ‡∏î‡πâ
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`[abc]`}/>
              </div>
              <div className="font-semibold text-sm md:text-sm pl-3">
                Example
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`afoxybpoxyb`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`[abc] => ab`}/>
              </div>
            </div>

            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Accept abc or def
              </div>
              <div className="text-sm md:text-sm pl-3">
                ‡πÄ‡∏≠‡∏≤ abc ‡∏´‡∏£‡∏∑‡∏≠ def ‡∏Å‡πá‡πÑ‡∏î‡πâ
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`[abc|def]`}/>
              </div>
              <div className="font-semibold text-sm md:text-sm pl-3">
                Example
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`atbtctdtetf`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`[abc|def] => abcdef`}/>
              </div>
            </div>
            
            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Except abc
              </div>
              <div className="text-sm md:text-sm pl-3">
                ‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ö‡∏≠‡∏±‡∏ô‡∏ö‡∏ô‡∏ô‡∏¥‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠ ‡πÑ‡∏°‡πà‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏° ^ ‡πÑ‡∏ß‡πâ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`[^abc]`}/>
              </div>
              <div className="font-semibold text-sm md:text-sm pl-3">
                Example
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`abcdef`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`[^abc] => def`}/>
              </div>
            </div>
            
            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Capture Group
              </div>
              <div className="text-sm md:text-sm pl-3">
                ‡∏à‡∏∞‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡πÜ‡∏Å‡∏±‡∏ö‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏° ‡πÅ‡∏ï‡πà‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ abc ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`(abc)`}/>
              </div>
              <div className="font-semibold text-sm md:text-sm pl-3">
                Example
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`javascript golang rust`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`(rust) => rust`}/>
              </div>
            </div>

            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Group abc or def
              </div>
              <div className="text-sm md:text-sm pl-3">
                ‡πÄ‡∏≠‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏° abc ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Å‡πá def
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`(abc|def)`}/>
              </div>
              <div className="font-semibold text-sm md:text-sm pl-3">
                Example
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`javascript golang rust`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`(javascript|rust) => javascript rust`}/>
              </div>
            </div>

            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Positive Lookahead
              </div>
              <div className="text-sm md:text-sm pl-3">
                ‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏∞‡∏ó‡∏£‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û (‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤ ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ‡πÑ‡∏õ ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏à‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏ï‡∏±‡∏ß‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ Group ‡∏ô‡∏µ‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!!!)
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`(?=abc)`}/>
              </div>
              <div className="font-semibold text-sm md:text-sm pl-3">
                Example
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`foobarbarfoo`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`bar(?=foo) => bar`}/>
              </div>
            </div>

            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Nagative Lookahead
              </div>
              <div className="text-sm md:text-sm pl-3">
                ‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏ó‡∏£‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û (‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤ ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ‡πÑ‡∏õ ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏à‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏ï‡∏±‡∏ß‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á Group ‡∏ô‡∏µ‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!!!)
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`(?!abc)`}/>
              </div>
              <div className="font-semibold text-sm md:text-sm pl-3">
                Example
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`foobarbarfoo`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`bar(?!foo) => bar`}/>
              </div>
            </div>

            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                Exactly ten, two or more
              </div>
              <div className="text-sm md:text-sm pl-3">
                ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`a{10}, a{2,}`}/>
              </div>
              <div className="font-semibold text-sm md:text-sm pl-3">
                Example
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`0123456789`}/>
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`\d{10} => 0123456789`}/>
              </div>
            </div>

            <div className="flex flex-col space-y-2">
              <div className="font-semibold text-md md:text-md pl-3">
                playground: <a className="text-sm text-blue-400 hover:text-blue-600 cursor-pointer" href="https://regexr.com/6p790">https://regexr.com/6p790</a>
              </div>
            </div>

            <div className="flex flex-col space-y-2 shadow-lg rounded-lg bg-cyan-800 text-white p-4">
              <div className="font-semibold text-md md:text-md pl-3">
                General Email Regex (RFC 5322 Official Standard)
              </div>
              <div className="pl-3 text-sm">
                <CodeBlocks props={`(?:[a-z0-9!#$%&'*+/=?^_\`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_\`{|}~-]+)*|"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])`}/>
              </div>
            </div>

          </div>

          <div id="quiz" className="flex flex-col space-y-3">
            <div>
              <ParagraphTitle props={'‚úèÔ∏è Quiz'}/>
            </div>
            <div className="font-semibold text-md md:text-md pl-4">
                ‡∏à‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á Regular Expression ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ Search ‡∏´‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
            </div>
            <form className="flex flex-col space-y-2 pl-4 py-3" type="submit">
              <div className="text-md md:text-md py-2">
                1. <strong>{`<a href="www.ics.com">Click here!</a>`}</strong> ‡∏´‡∏≤ Link ‡∏Ç‡∏≠‡∏á www.ics.com
              </div>
              <input onChange={(e) => setFirstQuestion(e.target.value)} className={firstQuestionCheck? `border border-green-500 px-2 py-1 text-md"`: `border border-black px-2 py-1 text-md"`} type="text" placeholder="Input a pattern here."/>
              {
                (firstQuestionCheck && checked) &&
                <label><AiOutlineCheck className="text-green-500 text-2xl"/></label>
              }
              {
                (!firstQuestionCheck && checked) &&
                <label><AiOutlineClose className="text-red-500 text-2xl"/></label>
              }

              <div className="text-md md:text-md py-2">
                2. <strong>"Hello0123456789"</strong> ‡∏´‡∏≤ ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
              </div>
              <input onChange={(e) => setSecondQuestion(e.target.value)} className={secondQuestionCheck? `border border-green-500 px-2 py-1 text-md"`: `border border-black px-2 py-1 text-md"`} type="text" placeholder="Input a pattern here."/>
              {
                (secondQuestionCheck && checked) &&
                <label><AiOutlineCheck className="text-green-500 text-2xl"/></label>
              }
              {
                (!secondQuestionCheck && checked) &&
                <label><AiOutlineClose className="text-red-500 text-2xl"/></label>
              }

              <div className="text-md md:text-md py-2">
                3. <strong>"to:test@gmail.com."</strong> ‡∏´‡∏≤ Email
              </div>
              <input onChange={(e) => setThirdQuestion(e.target.value)} className={thirdQuestionCheck? `border border-green-500 px-2 py-1 text-md"`: `border border-black px-2 py-1 text-md"`} type="text" placeholder="Input a pattern here."/>
              {
                (thirdQuestionCheck && checked) &&
                <label><AiOutlineCheck className="text-green-500 text-2xl"/></label>
              }
              {
                (!thirdQuestionCheck && checked) &&
                <label><AiOutlineClose className="text-red-500 text-2xl"/></label>
              }
              {
                checked &&
                <div className={point===3? "border border-green-500 p-4 bg-green-200":"border border-red-500 p-4 bg-red-200"}>
                  Your point is {point}.
                </div>
              }
              
              <div className="text-md md:text-md py-6">
                {
                  checked?
                  <button onClick={(e) => onResetHandle(e)} className="bg-green-500 hover:bg-green-800 p-2 w-full text-white font-semibold">Play Again</button>
                  :
                  <button onClick={onClickHandle} className="bg-slate-500 hover:bg-slate-800 p-2 w-full text-white font-semibold">Done</button>
                }
              </div>
            </form>

          </div>
        </div>
      </div>
    </div>
  )
}
